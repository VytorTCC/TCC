# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestPaginainicial():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_paginainicial(self):
    # Test name: pagina_inicial
    # Step # | name | target | value
    # 1 | mouseDown | css=tr:nth-child(5) > .fc-day-wed .fc-daygrid-day-top | 
    element = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(5) > .fc-day-wed .fc-daygrid-day-top")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).click_and_hold().perform()
    # 2 | mouseUp | css=.fc-highlight | 
    element = self.driver.find_element(By.CSS_SELECTOR, ".fc-highlight")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).release().perform()
    # 3 | mouseDown | id=mui-component-select-customer | 
    element = self.driver.find_element(By.ID, "mui-component-select-customer")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).click_and_hold().perform()
    # 4 | mouseUp | css=.MuiBackdrop-invisible | 
    element = self.driver.find_element(By.CSS_SELECTOR, ".MuiBackdrop-invisible")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).release().perform()
    # 5 | click | css=body | 
    self.driver.find_element(By.CSS_SELECTOR, "body").click()
    # 6 | click | css=.MuiMenuItem-root:nth-child(2) | 
    self.driver.find_element(By.CSS_SELECTOR, ".MuiMenuItem-root:nth-child(2)").click()
    # 7 | click | css=.css-1a9w728 | 
    self.driver.find_element(By.CSS_SELECTOR, ".css-1a9w728").click()
    # 8 | click | css=.MuiGrid-root:nth-child(2) > .MuiFormControl-fullWidth > .MuiFormHelperText-root | 
    self.driver.find_element(By.CSS_SELECTOR, ".MuiGrid-root:nth-child(2) > .MuiFormControl-fullWidth > .MuiFormHelperText-root").click()
    # 9 | click | id=mui-component-select-professional | 
    self.driver.find_element(By.ID, "mui-component-select-professional").click()
    # 10 | click | css=body | 
    self.driver.find_element(By.CSS_SELECTOR, "body").click()
    # 11 | click | css=.MuiBackdrop-invisible | 
    self.driver.find_element(By.CSS_SELECTOR, ".MuiBackdrop-invisible").click()
    # 12 | mouseDown | id=mui-component-select-customer | 
    element = self.driver.find_element(By.ID, "mui-component-select-customer")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).click_and_hold().perform()
    # 13 | mouseUp | css=.MuiBackdrop-invisible | 
    element = self.driver.find_element(By.CSS_SELECTOR, ".MuiBackdrop-invisible")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).release().perform()
    # 14 | click | css=body | 
    self.driver.find_element(By.CSS_SELECTOR, "body").click()
    # 15 | click | css=.MuiMenuItem-root:nth-child(6) | 
    self.driver.find_element(By.CSS_SELECTOR, ".MuiMenuItem-root:nth-child(6)").click()
    # 16 | mouseDown | id=mui-component-select-treatment | 
    element = self.driver.find_element(By.ID, "mui-component-select-treatment")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).click_and_hold().perform()
    # 17 | mouseUp | css=.MuiBackdrop-invisible | 
    element = self.driver.find_element(By.CSS_SELECTOR, ".MuiBackdrop-invisible")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).release().perform()
    # 18 | click | css=body | 
    self.driver.find_element(By.CSS_SELECTOR, "body").click()
    # 19 | click | css=.MuiMenuItem-root | 
    self.driver.find_element(By.CSS_SELECTOR, ".MuiMenuItem-root").click()
    # 20 | click | id=mui-component-select-treatmentProcedure | 
    self.driver.find_element(By.ID, "mui-component-select-treatmentProcedure").click()
    # 21 | mouseDown | id=mui-component-select-treatmentProcedure | 
    element = self.driver.find_element(By.ID, "mui-component-select-treatmentProcedure")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).click_and_hold().perform()
    # 22 | mouseUp | css=.MuiBackdrop-invisible | 
    element = self.driver.find_element(By.CSS_SELECTOR, ".MuiBackdrop-invisible")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).release().perform()
    # 23 | click | css=body | 
    self.driver.find_element(By.CSS_SELECTOR, "body").click()
    # 24 | click | css=.MuiMenuItem-root:nth-child(1) | 
    self.driver.find_element(By.CSS_SELECTOR, ".MuiMenuItem-root:nth-child(1)").click()
    # 25 | click | id=observation | 
    self.driver.find_element(By.ID, "observation").click()
    # 26 | mouseOver | id=add-session-button | 
    element = self.driver.find_element(By.ID, "add-session-button")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    # 27 | click | id=add-session-button | 
    self.driver.find_element(By.ID, "add-session-button").click()
    # 28 | mouseOut | id=add-session-button | 
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    # 29 | click | id=close-button | 
    self.driver.find_element(By.ID, "close-button").click()
    # 30 | mouseOver | id=confirm-button | 
    element = self.driver.find_element(By.ID, "confirm-button")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    # 31 | mouseDownAt | id=confirm-button | 72.828125,20.5
    element = self.driver.find_element(By.ID, "confirm-button")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).click_and_hold().perform()
    # 32 | mouseMoveAt | id=confirm-button | 72.828125,20.5
    element = self.driver.find_element(By.ID, "confirm-button")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    # 33 | mouseUpAt | id=confirm-button | 72.828125,20.5
    element = self.driver.find_element(By.ID, "confirm-button")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).release().perform()
    # 34 | click | id=confirm-button | 
    self.driver.find_element(By.ID, "confirm-button").click()
    # 35 | mouseOver | css=#status-button-delayed > .MuiBox-root | 
    element = self.driver.find_element(By.CSS_SELECTOR, "#status-button-delayed > .MuiBox-root")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    # 36 | click | css=#status-button-delayed > .MuiBox-root | 
    self.driver.find_element(By.CSS_SELECTOR, "#status-button-delayed > .MuiBox-root").click()
    # 37 | click | css=#status-button-delayed > .MuiBox-root | 
    self.driver.find_element(By.CSS_SELECTOR, "#status-button-delayed > .MuiBox-root").click()
    # 38 | mouseOut | css=#status-button-delayed > .MuiBox-root | 
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    # 39 | click | id=users-auto-complete | 
    self.driver.find_element(By.ID, "users-auto-complete").click()
    # 40 | click | id=users-auto-complete | 
    self.driver.find_element(By.ID, "users-auto-complete").click()
    # 41 | doubleClick | id=users-auto-complete | 
    element = self.driver.find_element(By.ID, "users-auto-complete")
    actions = ActionChains(self.driver)
    actions.double_click(element).perform()
    # 42 | click | id=users-auto-complete | 
    self.driver.find_element(By.ID, "users-auto-complete").click()
    # 43 | click | id=users-auto-complete-option-3 | 
    self.driver.find_element(By.ID, "users-auto-complete-option-3").click()
    # 44 | sendKeys | id=users-auto-complete | ${KEY_ENTER}
    self.driver.find_element(By.ID, "users-auto-complete").send_keys(Keys.ENTER)
    # 45 | mouseOver | css=.MuiAutocomplete-clearIndicator > .MuiSvgIcon-root | 
    element = self.driver.find_element(By.CSS_SELECTOR, ".MuiAutocomplete-clearIndicator > .MuiSvgIcon-root")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    # 46 | click | css=.MuiAutocomplete-clearIndicator > .MuiSvgIcon-root | 
    self.driver.find_element(By.CSS_SELECTOR, ".MuiAutocomplete-clearIndicator > .MuiSvgIcon-root").click()
    # 47 | mouseOver | css=#status-button-waiting-for-clinic > .MuiBox-root | 
    element = self.driver.find_element(By.CSS_SELECTOR, "#status-button-waiting-for-clinic > .MuiBox-root")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    # 48 | click | css=#status-button-waiting-for-clinic > .MuiBox-root | 
    self.driver.find_element(By.CSS_SELECTOR, "#status-button-waiting-for-clinic > .MuiBox-root").click()
    # 49 | click | css=#status-button-waiting-for-clinic > .MuiBox-root | 
    self.driver.find_element(By.CSS_SELECTOR, "#status-button-waiting-for-clinic > .MuiBox-root").click()
    # 50 | mouseOut | css=#status-button-waiting-for-clinic > .MuiBox-root | 
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    # 51 | open | https://dashboard.plataformabyou.com.br/visao-geral | 
    self.driver.get("https://dashboard.plataformabyou.com.br/visao-geral")
    # 52 | setWindowSize | 1366x768 | 
    self.driver.set_window_size(1366, 768)
    # 53 | click | css=.fc-dayGridMonth-button | 
    self.driver.find_element(By.CSS_SELECTOR, ".fc-dayGridMonth-button").click()
    # 54 | click | css=.fc-timeGridDay-button | 
    self.driver.find_element(By.CSS_SELECTOR, ".fc-timeGridDay-button").click()
    # 55 | click | css=.fc-listWeek-button | 
    self.driver.find_element(By.CSS_SELECTOR, ".fc-listWeek-button").click()
    # 56 | click | css=.fc-dayGridMonth-button | 
    self.driver.find_element(By.CSS_SELECTOR, ".fc-dayGridMonth-button").click()
    # 57 | click | css=.fc-icon-chevron-left | 
    self.driver.find_element(By.CSS_SELECTOR, ".fc-icon-chevron-left").click()
    # 58 | mouseOver | css=.fc-icon-chevron-left | 
    element = self.driver.find_element(By.CSS_SELECTOR, ".fc-icon-chevron-left")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    # 59 | mouseUp | css=.fc-icon-chevron-left | 
    element = self.driver.find_element(By.CSS_SELECTOR, ".fc-icon-chevron-left")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).release().perform()
    # 60 | mouseOver | css=.fc-icon-chevron-left | 
    element = self.driver.find_element(By.CSS_SELECTOR, ".fc-icon-chevron-left")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
  
